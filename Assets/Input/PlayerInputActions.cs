//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Input/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""c903e1f4-65e0-4d96-bbcc-6b2471ff5e37"",
            ""actions"": [
                {
                    ""name"": ""Quicksave"",
                    ""type"": ""Button"",
                    ""id"": ""cb3b802a-92ce-4ea2-8535-16c995c7aee6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quickload"",
                    ""type"": ""Button"",
                    ""id"": ""387b25c9-de14-4a74-aa79-f8b29e92e7f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenPauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""6fd503fd-7489-44df-97ce-89e03c765e71"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraScrolling"",
                    ""type"": ""Value"",
                    ""id"": ""673087fc-fdf2-4be9-bba3-821199c116fd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraScrollingBoost"",
                    ""type"": ""Button"",
                    ""id"": ""49e187b0-158a-4e41-aa3f-aa27031d6a14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TogglePause"",
                    ""type"": ""Button"",
                    ""id"": ""1b240d6f-b1ff-461f-b1b4-f69cb9ccd265"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""135e5a07-6b9e-4ad2-bad1-72914300446c"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Quicksave"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""444bc2f6-48da-4218-baca-a424c07ee064"",
                    ""path"": ""<Keyboard>/f9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Quickload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c8d6b91-2d6a-4f4b-b0be-9bde650080ae"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""OpenPauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c9d0004f-df44-4a5b-9961-68765c014e67"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraScrolling"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""81792740-e5e8-4694-bf2e-dddec3fdaec2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""CameraScrolling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a658de92-109d-41fa-acbd-a745f7e96e77"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""CameraScrolling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9651be31-2cf1-46ae-8d62-d34be9783dd6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""CameraScrolling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a225a4cb-817f-47a3-bacf-c37f5fd0433b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""CameraScrolling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""40a52784-1cda-4578-a6f8-2fc2b73c67c8"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""CameraScrollingBoost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37af538a-2d94-4a39-be73-f7275e5c0f81"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""TogglePause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PauseMenu"",
            ""id"": ""8f9ab166-1e7f-49be-bb0f-08cb2a696198"",
            ""actions"": [
                {
                    ""name"": ""ClosePauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""cadc5634-164f-4776-8cae-ad8f96ed77d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""647d97fc-5fa8-4662-a90b-c5f9655929d1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ClosePauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Mouse & Keyboard"",
            ""bindingGroup"": ""Mouse & Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Quicksave = m_Gameplay.FindAction("Quicksave", throwIfNotFound: true);
        m_Gameplay_Quickload = m_Gameplay.FindAction("Quickload", throwIfNotFound: true);
        m_Gameplay_OpenPauseMenu = m_Gameplay.FindAction("OpenPauseMenu", throwIfNotFound: true);
        m_Gameplay_CameraScrolling = m_Gameplay.FindAction("CameraScrolling", throwIfNotFound: true);
        m_Gameplay_CameraScrollingBoost = m_Gameplay.FindAction("CameraScrollingBoost", throwIfNotFound: true);
        m_Gameplay_TogglePause = m_Gameplay.FindAction("TogglePause", throwIfNotFound: true);
        // PauseMenu
        m_PauseMenu = asset.FindActionMap("PauseMenu", throwIfNotFound: true);
        m_PauseMenu_ClosePauseMenu = m_PauseMenu.FindAction("ClosePauseMenu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Quicksave;
    private readonly InputAction m_Gameplay_Quickload;
    private readonly InputAction m_Gameplay_OpenPauseMenu;
    private readonly InputAction m_Gameplay_CameraScrolling;
    private readonly InputAction m_Gameplay_CameraScrollingBoost;
    private readonly InputAction m_Gameplay_TogglePause;
    public struct GameplayActions
    {
        private @PlayerInputActions m_Wrapper;
        public GameplayActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Quicksave => m_Wrapper.m_Gameplay_Quicksave;
        public InputAction @Quickload => m_Wrapper.m_Gameplay_Quickload;
        public InputAction @OpenPauseMenu => m_Wrapper.m_Gameplay_OpenPauseMenu;
        public InputAction @CameraScrolling => m_Wrapper.m_Gameplay_CameraScrolling;
        public InputAction @CameraScrollingBoost => m_Wrapper.m_Gameplay_CameraScrollingBoost;
        public InputAction @TogglePause => m_Wrapper.m_Gameplay_TogglePause;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Quicksave.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuicksave;
                @Quicksave.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuicksave;
                @Quicksave.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuicksave;
                @Quickload.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuickload;
                @Quickload.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuickload;
                @Quickload.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQuickload;
                @OpenPauseMenu.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnOpenPauseMenu;
                @OpenPauseMenu.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnOpenPauseMenu;
                @OpenPauseMenu.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnOpenPauseMenu;
                @CameraScrolling.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraScrolling;
                @CameraScrolling.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraScrolling;
                @CameraScrolling.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraScrolling;
                @CameraScrollingBoost.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraScrollingBoost;
                @CameraScrollingBoost.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraScrollingBoost;
                @CameraScrollingBoost.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraScrollingBoost;
                @TogglePause.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTogglePause;
                @TogglePause.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTogglePause;
                @TogglePause.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnTogglePause;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Quicksave.started += instance.OnQuicksave;
                @Quicksave.performed += instance.OnQuicksave;
                @Quicksave.canceled += instance.OnQuicksave;
                @Quickload.started += instance.OnQuickload;
                @Quickload.performed += instance.OnQuickload;
                @Quickload.canceled += instance.OnQuickload;
                @OpenPauseMenu.started += instance.OnOpenPauseMenu;
                @OpenPauseMenu.performed += instance.OnOpenPauseMenu;
                @OpenPauseMenu.canceled += instance.OnOpenPauseMenu;
                @CameraScrolling.started += instance.OnCameraScrolling;
                @CameraScrolling.performed += instance.OnCameraScrolling;
                @CameraScrolling.canceled += instance.OnCameraScrolling;
                @CameraScrollingBoost.started += instance.OnCameraScrollingBoost;
                @CameraScrollingBoost.performed += instance.OnCameraScrollingBoost;
                @CameraScrollingBoost.canceled += instance.OnCameraScrollingBoost;
                @TogglePause.started += instance.OnTogglePause;
                @TogglePause.performed += instance.OnTogglePause;
                @TogglePause.canceled += instance.OnTogglePause;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // PauseMenu
    private readonly InputActionMap m_PauseMenu;
    private IPauseMenuActions m_PauseMenuActionsCallbackInterface;
    private readonly InputAction m_PauseMenu_ClosePauseMenu;
    public struct PauseMenuActions
    {
        private @PlayerInputActions m_Wrapper;
        public PauseMenuActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ClosePauseMenu => m_Wrapper.m_PauseMenu_ClosePauseMenu;
        public InputActionMap Get() { return m_Wrapper.m_PauseMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PauseMenuActions set) { return set.Get(); }
        public void SetCallbacks(IPauseMenuActions instance)
        {
            if (m_Wrapper.m_PauseMenuActionsCallbackInterface != null)
            {
                @ClosePauseMenu.started -= m_Wrapper.m_PauseMenuActionsCallbackInterface.OnClosePauseMenu;
                @ClosePauseMenu.performed -= m_Wrapper.m_PauseMenuActionsCallbackInterface.OnClosePauseMenu;
                @ClosePauseMenu.canceled -= m_Wrapper.m_PauseMenuActionsCallbackInterface.OnClosePauseMenu;
            }
            m_Wrapper.m_PauseMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ClosePauseMenu.started += instance.OnClosePauseMenu;
                @ClosePauseMenu.performed += instance.OnClosePauseMenu;
                @ClosePauseMenu.canceled += instance.OnClosePauseMenu;
            }
        }
    }
    public PauseMenuActions @PauseMenu => new PauseMenuActions(this);
    private int m_MouseKeyboardSchemeIndex = -1;
    public InputControlScheme MouseKeyboardScheme
    {
        get
        {
            if (m_MouseKeyboardSchemeIndex == -1) m_MouseKeyboardSchemeIndex = asset.FindControlSchemeIndex("Mouse & Keyboard");
            return asset.controlSchemes[m_MouseKeyboardSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnQuicksave(InputAction.CallbackContext context);
        void OnQuickload(InputAction.CallbackContext context);
        void OnOpenPauseMenu(InputAction.CallbackContext context);
        void OnCameraScrolling(InputAction.CallbackContext context);
        void OnCameraScrollingBoost(InputAction.CallbackContext context);
        void OnTogglePause(InputAction.CallbackContext context);
    }
    public interface IPauseMenuActions
    {
        void OnClosePauseMenu(InputAction.CallbackContext context);
    }
}
